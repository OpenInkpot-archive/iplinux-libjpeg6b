#! /bin/sh /usr/share/dpatch/dpatch-run
## 204_jpegtran_man.dpatch by Jorgen Grahn <grahn+debian@snipabacken.dyndns.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: improves readability of jpegtran man page

@DPATCH@
diff -urNad libjpeg6b-6b~/jpegtran.1 libjpeg6b-6b/jpegtran.1
--- libjpeg6b-6b~/jpegtran.1	2007-08-16 22:55:43.000000000 +0200
+++ libjpeg6b-6b/jpegtran.1	2007-08-16 22:55:50.000000000 +0200
@@ -91,12 +91,12 @@
 .TP
 .B \-transverse
 Transverse transpose (across UR-to-LL axis).
-.PP
+.IP
 The transpose transformation has no restrictions regarding image dimensions.
 The other transformations operate rather oddly if the image dimensions are not
 a multiple of the iMCU size (usually 8 or 16 pixels), because they can only
 transform complete blocks of DCT coefficient data in the desired way.
-.PP
+.IP
 .BR jpegtran 's
 default behavior when transforming an odd-size image is designed
 to preserve exact reversibility and mathematical consistency of the
@@ -108,7 +108,7 @@
 of transpose and flip operations; for consistency, their actions on edge
 pixels are defined to be the same as the end result of the corresponding
 transpose-and-flip sequence.
-.PP
+.IP
 For practical use, you may prefer to discard any untransformable edge pixels
 rather than having a strange-looking strip along the right and/or bottom edges
 of a transformed image.  To do this, add the
@@ -117,7 +117,7 @@
 .TP
 .B \-trim
 Drop non-transformable edge blocks.
-.PP
+.IP
 Obviously, a transformation with
 .B \-trim
 is not reversible, so strictly speaking
@@ -130,7 +130,7 @@
 followed by
 .B \-rot 180 -trim
 trims both edges.
-.PP
+.IP
 If you are only interested by perfect transformation, add the
 .B \-perfect
 switch:
@@ -138,8 +138,9 @@
 .B \-perfect
 Fails with an error if the transformation is not perfect. For example
 you may want to do
-.TP
+.IP
 .B (jpegtran \-rot 90 -perfect foo.jpg || djpeg foo.jpg| pnmflip \-r90 | cjpeg)
+.IP
 to do a perfect rotation if available or an approximated one if
 not.
 .PP
@@ -151,25 +152,24 @@
 corner up and/or left to make it so, simultaneously increasing the region
 dimensions to keep the lower right crop corner unchanged.  (Thus, the
 output image covers at least the requested region, but may cover more.)
-
+.IP
 Note: 
 .B \-perfect
 and
 .B lossless-crop
 are enhancements from http://sylvana.net/jpegcrop/ that may not be available on
 non-Debian systems.
-
+.PP
 The image can be losslessly cropped by giving the switch:
 .TP
 .B \-crop WxH+X+Y
 Crop to a rectangular subarea of width W, height H starting at point X,Y.
 .PP
-.PP
 Another not-strictly-lossless transformation switch is:
 .TP
 .B \-grayscale
 Force grayscale output.
-.PP
+.IP
 This option discards the chrominance channels if the input image is YCbCr
 (ie, a standard color JPEG), resulting in a grayscale JPEG file.  The
 luminance channel is preserved exactly, so this is a better method of reducing
@@ -193,9 +193,11 @@
 .TP
 .B \-copy all
 Copy all extra markers.  This setting preserves miscellaneous markers
-found in the source file, such as JFIF thumbnails and Photoshop settings.
+found in the source file, such as
+Exif data,
+JFIF thumbnails and Photoshop settings.
 In some files these extra markers can be sizable.
-.PP
+.IP
 The default behavior is
 .BR "\-copy comments" .
 (Note: in IJG releases v6 and v6a,
